buildscript {
    ext.kotlin_version = '1.1.4-2'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'eclipse'

jar {
    baseName = 'core'
    version = '0.0.1'
}

project.version = jar.version
project.group = "io.honeymon.spring.template"

sourceCompatibility = 1.8
targetCompatibility = 1.8
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

project.ext {
    springVersion = "4.3.6.RELEASE"
    springJpaVersion = "1.11.7.RELEASE"
    hibernateVersion = "5.2.10.Final"
    hibernateValidatorVersion = "6.0.2.Final"
    queryDslVersion = "4.1.4"
    jodaTimeVersion = "2.9.9"
    modelMapperVersion = "1.1.0"
    lombokVersion = "1.16.18"
    logbackVersion = "1.2.3"
    slf4jVersion = "1.7.23"
    junitVersion = "4.12"
    assertJVersion = "3.8.0"
    mokitoVersion = "2.10.0"
    jsonPathVersion = "2.4.0"
    hamcrestVersion = "1.3"
    jacksonVersion = "2.9.1"
}

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

dependencies {
    /**
     * Spring
     */
    compile("org.springframework:spring-context:${springVersion}")
    compile("org.springframework:spring-context-support:${springVersion}")
    compile("org.springframework:spring-orm:${springVersion}")
    compile("org.springframework:spring-webmvc:${springVersion}")

    /**
     * ORM
     * - Hibernate
     * - JPA
     * - QueryDSL
     */
    compile("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
    compile("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    compile("org.springframework.data:spring-data-jpa:${springJpaVersion}")
    compile("com.querydsl:querydsl-jpa:${queryDslVersion}")
    compile("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")

    /**
     * Etc
     */
    compile("joda-time:joda-time:${jodaTimeVersion}")
    compile("org.modelmapper:modelmapper:${modelMapperVersion}")
    compile("org.projectlombok:lombok:${lombokVersion}")
    compile("com.fasterxml.jackson.core:jackson-core:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}")
    compile("com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}")

    /**
     * Log
     */
    compile("ch.qos.logback:logback-classic:${logbackVersion}")
    compile("org.slf4j:jcl-over-slf4j:${slf4jVersion}")

    /**
     * Test
     */
    testCompile("org.springframework:spring-test:${springVersion}")
    testCompile("org.slf4j:log4j-over-slf4j:${slf4jVersion}")
    testCompile("junit:junit:${junitVersion}")
    testCompile("org.assertj:assertj-core:${assertJVersion}")
    testCompile("org.mockito:mockito-core:${mokitoVersion}")
    testCompile("com.jayway.jsonpath:json-path:${jsonPathVersion}")
    testCompile("org.hamcrest:hamcrest-library:${hamcrestVersion}")
}

//
// KOTLIN
//
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}